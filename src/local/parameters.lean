import local.h_principle
import global.parametricity_for_free
import interactive_expr
set_option trace.filter_inst_type true

/-!
This is a stop-gap file to prove the parametric local h-principle.
-/
noncomputable theory

open metric finite_dimensional set function rel_loc
open_locale topological_space

section parametric_h_principle


variables {E : Type*} [normed_add_comm_group E] [normed_space ‚Ñù E] [finite_dimensional ‚Ñù E]
          {F : Type*} [normed_add_comm_group F] [normed_space ‚Ñù F] [measurable_space F] [borel_space F]
          [finite_dimensional ‚Ñù F]
          {P : Type*} [normed_add_comm_group P] [normed_space ‚Ñù P]

variables [finite_dimensional ‚Ñù E] [finite_dimensional ‚Ñù F]

variables {R : rel_loc E F} (h_op: is_open R) (h_ample: R.is_ample) (L : landscape E)
variables {Œµ : ‚Ñù} (Œµ_pos : 0 < Œµ)

include h_op h_ample Œµ_pos

/- not the full local h-principle sphere eversion,
but just a homotopy of solutions from a homotopy of formal solutions
We don't use the `L.C` in the statement, since we want a set in `‚Ñù`, not in `E`. -/
lemma rel_loc.htpy_formal_sol.exists_sol (ùìï : R.htpy_formal_sol) (C : set ‚Ñù) (hC : is_closed C)
  (h_hol : ‚àÄ·∂† t near C, ‚àÄ x, (ùìï t).is_holonomic_at x) :
  ‚àÉ f : ‚Ñù ‚Üí E ‚Üí F,
    (ùíû ‚àû $ uncurry f) ‚àß
    (‚àÄ·∂† t near C, ‚àÄ x, f t x = ùìï.f t x) ‚àß
    (‚àÄ x, x ‚àâ L.K‚ÇÅ ‚Üí ‚àÄ t, f t x = ùìï.f t x) ‚àß
    (‚àÄ·∂† x near L.K‚ÇÄ, ‚àÄ t, ‚à•f t x - ùìï.f t x‚à• ‚â§ Œµ) ‚àß
    (‚àÄ·∂† x near L.K‚ÇÄ, ‚àÄ t, (x, f t x, D (f t) x) ‚àà R) :=
begin
  sorry
end

end parametric_h_principle
