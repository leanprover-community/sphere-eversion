import topology.constructions

noncomputable theory
open_locale topological_space classical
open set

variables {Œ± Œ≤ Œ≥ : Type*} [topological_space Œ±] [topological_space Œ≤] [topological_space Œ≥]
  {x : Œ±}

lemma continuous_at.fst {f : Œ± ‚Üí Œ≤ √ó Œ≥} (hf : continuous_at f x) :
  continuous_at (Œª a : Œ±, (f a).1) x :=
continuous_at_fst.comp hf

lemma continuous_at.snd {f : Œ± ‚Üí Œ≤ √ó Œ≥} (hf : continuous_at f x) :
  continuous_at (Œª a : Œ±, (f a).2) x :=
continuous_at_snd.comp hf

lemma is_open_slice_of_is_open_over {Œ© : set (Œ± √ó Œ≤)} {x‚ÇÄ : Œ±}
  (hŒ©_op : ‚àÉ U ‚àà ùìù x‚ÇÄ, is_open (Œ© ‚à© prod.fst ‚Åª¬π' U)) : is_open (prod.mk x‚ÇÄ ‚Åª¬π' Œ©) :=
begin
  rcases hŒ©_op with ‚ü®U, hU, hU_op‚ü©, convert hU_op.preimage (continuous.prod.mk x‚ÇÄ) using 1,
  simp_rw [preimage_inter, preimage_preimage, preimage_const, mem_of_mem_nhds hU, if_pos,
    inter_univ]
end
