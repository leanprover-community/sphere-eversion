on:
  push:
    branches:
      - master

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build_project:
    runs-on: ubuntu-latest
    name: Build project
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install elan
        run: curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh -s -- -y --default-toolchain leanprover/lean4:4.5.0

      - name: Get cache
        run: ~/.elan/bin/lake exe cache get || true

      - name: Build project
        run: ~/.elan/bin/lake build SphereEversion

      - name: Cache API docs
        uses: actions/cache@v4
        with:
          path: |
            docbuild/.lake/build/doc
          key: LakeBuildDoc-${{ runner.os }}-${{ hashFiles('lean-toolchain') }}-${{ hashFiles('lake-manifest.json') }}
          restore-keys: LakeBuildDoc-

      - name: Build project documentation
        working-directory: docbuild
        run: |
          MATHLIB_NO_CACHE_ON_UPDATE=1 ~/.elan/bin/lake update SphereEversion || true
          ~/.elan/bin/lake build SphereEversion:docs

      - name: Build blueprint and copy to `docs/blueprint`
        uses: xu-cheng/texlive-action@v2
        with:
          docker_image: ghcr.io/xu-cheng/texlive-full:20231201
          run: |
            export PIP_BREAK_SYSTEM_PACKAGES=1
            apk update
            apk add --update make py3-pip git pkgconfig graphviz graphviz-dev gcc musl-dev
            git config --global --add safe.directory $GITHUB_WORKSPACE
            git config --global --add safe.directory `pwd`
            python3 -m venv env
            source env/bin/activate
            pip install --upgrade pip requests wheel
            pip install pygraphviz --global-option=build_ext --global-option="-L/usr/lib/graphviz/" --global-option="-R/usr/lib/graphviz/"
            pip install leanblueprint
            leanblueprint pdf
            mkdir docs
            cp blueprint/print/print.pdf docs/blueprint.pdf
            leanblueprint web
            cp -r blueprint/web docs/blueprint

      - name: Check declarations
        run: ~/.elan/bin/lake exe checkdecls blueprint/lean_decls

      - name: Copy documentation to `docs/docs`
        run: |
          sudo chown -R runner docs
          cp -r docbuild/.lake/build/doc docs/docs

      - name: Install pandoc
        run: |
          sudo apt update
          sudo apt install pandoc

      - name: Build webpage
        run: |
          cd docs_src
          pandoc -t html --mathjax -f markdown+tex_math_dollars+raw_tex index.md --template template.html -o ../docs/index.html
          cp *.css ../docs

      - name: Upload docs & blueprint artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # - name: Make sure the cache works
      #   run: mv docs/docs .lake/build/doc
